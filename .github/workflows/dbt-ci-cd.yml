# name: dbt Advanced CI/CD

# on:
#   push:
#     branches: [ "**" ]
#   pull_request:
#     branches: [ "main" ]

# env:
#   DBT_SNOWFLAKE_PASSWORD: ${{ secrets.DBT_SNOWFLAKE_PASSWORD }}

# jobs:
#   branch-deployment:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: [3.9]
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
#       with:
#         fetch-depth: 0  # Important for dbt state comparison

#     - name: Setup Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: ${{ matrix.python-version }}

#     - name: Install dbt
#       run: pip install dbt-snowflake

#     - name: Get branch name
#       id: branch-name
#       uses: tj-actions/branch-names@v7

#     - name: Deploy to WIP (Feature Branches)
#       if: steps.branch-name.outputs.current_branch != 'main'
#       run: |
#         echo "Deploying to WIP environment for branch: ${{ steps.branch-name.outputs.current_branch }}"
#         dbt run --target wip
#         dbt test --target wip
#         dbt docs generate --target wip

#     - name: Deploy to PROD (Main Branch)
#       if: steps.branch-name.outputs.current_branch == 'main'
#       run: |
#         echo "Deploying to PROD environment"
#         dbt run --target prod
#         dbt test --target prod
#         dbt docs generate --target prod
#         dbt source freshness --target prod


name: dbt CI/CD (Single Target)

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

env:
  DBT_SNOWFLAKE_ACCOUNT: ${{ secrets.DBT_SNOWFLAKE_ACCOUNT }}
  DBT_SNOWFLAKE_USER: ${{ secrets.DBT_SNOWFLAKE_USER }}
  DBT_SNOWFLAKE_PASSWORD: ${{ secrets.DBT_SNOWFLAKE_PASSWORD }}
  DBT_SNOWFLAKE_ROLE: ${{ secrets.DBT_SNOWFLAKE_ROLE }}
  DBT_SNOWFLAKE_WAREHOUSE: ${{ secrets.DBT_SNOWFLAKE_WAREHOUSE }}
  DBT_SNOWFLAKE_DATABASE: ${{ secrets.DBT_SNOWFLAKE_DATABASE }}

jobs:
  branch-deployment:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dbt
      run: pip install dbt-snowflake

    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v7

    # ---------------------------------------------
    # FEATURE / NON-MAIN BRANCH DEPLOYMENT
    # ---------------------------------------------
    - name: Deploy to WIP (Feature Branch)
      if: steps.branch-name.outputs.current_branch != 'main'
      env:
        DBT_SCHEMA: "wip"
      run: |
        echo "Deploying to WIP environment for branch: ${{ steps.branch-name.outputs.current_branch }}"
        echo "Using schema: $DBT_SCHEMA"
        dbt debug --target wip
        dbt run --target wip
        dbt test --target wip
        dbt docs generate --target wip

    # ---------------------------------------------
    # MAIN BRANCH DEPLOYMENT → PROD SCHEMA
    # ---------------------------------------------
    - name: Deploy to PROD (via WIP target)
      if: steps.branch-name.outputs.current_branch == 'main'
      env:
        DBT_SCHEMA: "prod"
      run: |
        echo "Branch merged to main — deploying models to PROD schema using same target"
        echo "Using schema: $DBT_SCHEMA"
        dbt debug --target wip
        dbt run --target wip
        dbt test --target wip
        dbt docs generate --target wip
        dbt source freshness --target wip
